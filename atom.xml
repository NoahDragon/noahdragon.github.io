<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Dream Navigator]]></title>
  <link href="http://abnerchou.me/atom.xml" rel="self"/>
  <link href="http://abnerchou.me/"/>
  <updated>2016-04-14T22:38:47-04:00</updated>
  <id>http://abnerchou.me/</id>
  <author>
    <name><![CDATA[Abner Chou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Frozen Heart Cracked Plot]]></title>
    <link href="http://abnerchou.me/cn/blog/2015/10/10/frozen-heart-cracked-plot/"/>
    <updated>2015-10-10T20:15:00-04:00</updated>
    <id>http://abnerchou.me/cn/blog/2015/10/10/frozen-heart-cracked-plot</id>
    <content type="html"><![CDATA[<p><img src="http://images6.fanpop.com/image/photos/36000000/Frozen-image-frozen-36065977-2560-1600.jpg" alt="" /></p>

<p>最近《冰雪奇缘》出奇的火爆，不少人向我推荐。而且在网上听了其主题曲<a href="http://v.youku.com/v_show/id_XNjQ1MTIwMzc2.html?s=105941">《Let it go》</a>（另推荐<a href="http://www.bilibili.tv/video/av922328/">25国语言版</a>），被歌词深深的震撼了。</p>

<p>电影开场就让人飙泪一把：当安娜坐在爱丽莎的门口反复唱“你想不想堆雪人”，并在空旷的客厅玩耍；身为独生子女能深刻的体会这欢乐背后的孤独，更何况还是有姐姐的呢。</p>

<!-- more -->


<p>但此感动转瞬即逝，其后的情节虽跌宕起伏，笑料不断，但看完后比较困惑，不少情节让人难以理解。</p>

<ol>
<li><p>诅咒从何而来。开篇到结尾一直没有说明，难道这是要拍续集的节奏？</p></li>
<li><p>为何爱丽莎的魔法直接击中人后，会造成永久的冰冻效果呢？（安娜的白头发）</p></li>
<li><p>国王和巨魔是什么关系？爱丽莎的魔咒跟父辈的经历似乎有关系。</p></li>
<li><p>为何没有寻求解除诅咒的方法呢？从小就知道爱丽莎天赋异禀，为何没有寻找解除其身上神力的方法呢？</p></li>
<li><p>国王和王后对爱丽莎的能力也是阻止，而不是寻找其发挥作用的地方。这似乎映射一些父母教育方面的问题。</p></li>
<li><p>真爱是亲情，是不求回报的付出。这个可以理解，但为何爱丽莎懂得爱后，立刻就可以施展逆魔法，将大陆冰封解除。如果将爱丽莎比喻成冰法，应该妹妹安娜是火法或许更符合剧情套路。在被真爱解冻后的安娜，利用魔法给艾伦多带来夏天。</p></li>
<li><p>同上，爱丽莎本身就有收放自如的魔法能力，却一直不知。难道就是因为恐惧么？这样解释有些牵强。</p></li>
</ol>


<p>综上，虽然剧情上的瑕疵，并不能阻碍其成为动画中的精品。更别提其绚丽的3D特效了，推荐影院观看。</p>

<p>这些剧情上的缺陷，是在影片结束后，感到很空洞，回想起来发现剧中有好多没有解释的细节。导演可能是为了拍续集留下一些空间。</p>

<p>如果拍续集的话，我一定会看。</p>

<p><img src="http://th05.deviantart.net/fs71/PRE/f/2013/355/d/6/disney_frozen_by_naschi-d6yrqdf.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一些关于搭建网页的信息]]></title>
    <link href="http://abnerchou.me/cn/blog/2015/05/12/some-info-about-build-a-website/"/>
    <updated>2015-05-12T22:52:00-04:00</updated>
    <id>http://abnerchou.me/cn/blog/2015/05/12/some-info-about-build-a-website</id>
    <content type="html"><![CDATA[<p>此文章写于2014-Aug-01.</p>

<p>这里只是罗列下搭建个人网站时的工具。</p>

<p>静态网站：<a href="https://github.com/">Github</a> 的page功能就足以搭建一个像样的静态页面了。这里有个不错的教程。
优点：免费，无限流量，几乎无当机的现象，轻松备份（使用git）
缺点：无法支持动态页面（比如留言功能），整站内容可以被他人轻松拷贝（git clone）</p>

<!-- more -->


<p>动态网站：与其购买支持PHP或ASP的空间，不如在<a href="https://www.digitalocean.com/">Digital Ocean</a>上买个VPS. 每月只需$5, 20Gb SSD硬盘，而且1TB的流量，对于个人网站来说是绰绰有余。
优点：支持各种网站模式，如同私有服务器；可选操作系统；有亚洲、欧洲、美国机房；SSD硬盘，系统安装备份速度快；专有IP
缺点：近一周当机两次；需付费；亚洲机房的速度，国内访问不理想；需要熟练使用Apache以及Linux操作系统</p>

<p>网站域名（Optional）：
这里有两个北美最大的域名销售网站：<a href="https://www.namecheap.com/">Namecheap</a>和<a href="https://www.godaddy.com">GoDaddy</a>。一般的域名都只需要$10每年，并且提供隐私保护，防止用户信息被Whois查询所泄露。支持DNS文件配置，比如邮件转发，二级域名等。</p>

<p><strong>网站内容管理：</strong></p>

<p><a href="http://jekyllrb.com/">Jekyll</a>是一个网站内容生成工具，使用Markdown格式。虽然功能强大，但要构建一个网站，还需要有CSS以及HTML的知识，并且熟悉Jekyll的架构。（在静态网站的教程中有提及）</p>

<p><a href="http://octopress.org/">Octopress</a>是一个基于Jekyll的静态网站生成器。相比于Jekyll，它提供现成的网站模板，并将Jekyll的搭建，生成，及发布自动，使得用户更专注于写作。缺点是它与Github集成，只能用于Github Page的搭建。(本网站即是基于Octopress)</p>

<p><a href="https://disqus.com/">Disqus</a>是网站评论系统。只需要添加一段Js代码到网页中，即可实现评论功能。适用静态网页，或拥有多个网站的管理员。此工具可以弥补Github Page无法评论的缺陷。</p>

<p><a href="https://sites.google.com">Google Site</a>是一个简洁明了的在线网站构建。</p>

<p><a href="https://zh-cn.wordpress.com/">Wordpress</a>是知名的网站内容管理系统。如果有自己的VPS，它的一键安装能省下不少时间精力。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Online Hacker Game]]></title>
    <link href="http://abnerchou.me/blog/2014/08/05/an-online-hacker-game/"/>
    <updated>2014-08-05T18:22:48-04:00</updated>
    <id>http://abnerchou.me/blog/2014/08/05/an-online-hacker-game</id>
    <content type="html"><![CDATA[<p>You could start the game from <a href="http://fun.coolshell.cn">here</a>, hosted by <a href="http://coolshell.cn">coolshell.cn</a>.</p>

<p>Don&rsquo;t hesitate to use google and wikipedia to solve the puzzles.</p>

<p>I have posted hints and solutions on <a href="https://github.com/NoahDragon/fun.coolshell.cn">my github</a>, use them wisely when you get difficulties.</p>

<p>Enjoy :)</p>

<p><img src="http://abnerchou.me/images/pics/online_hacker_game.PNG" alt="Rank 49"/></p>

<p>A little bit show off and keep a record.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set up VPN with transparent proxy on DigitalOcean]]></title>
    <link href="http://abnerchou.me/blog/2014/07/12/set-up-vpn-with-transparent-proxy-on-digitalocean/"/>
    <updated>2014-07-12T20:43:47-04:00</updated>
    <id>http://abnerchou.me/blog/2014/07/12/set-up-vpn-with-transparent-proxy-on-digitalocean</id>
    <content type="html"><![CDATA[<p>Recently I just rent a VPS on <a href="https://www.digitalocean.com">Digital Ocean</a>,
which is cheap for a student and who is price sensitive.
As it gives you all the controls of an OS, it likes a remote compute machine.
Meanwhile, you could do anything as you have your own server.</p>

<!-- more -->


<p>Therefore, it comes to my mind to create a VPN server.
VPN is a virtual private network that extends a private network across a public network,
which usually used to bypass firewalls or increase access speed.
Proxy is a server that acts as an intermediary for requests from clients seeking resources from other servers.
It needs to be set in software application&rsquo;s configuration.
VPN and Proxy both could hide your ip.
The differences between them are listed following:</p>

<p>|                  |VPN                                                        |Proxy                                         |
|:&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;|:&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;:|:&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;:|
|Protocols&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|Support any Protocols|Support certain Protocols, such as HTTP, SOCKS
|Softwares         |Any softwares that can run on the machine &nbsp;&nbsp;&nbsp;&nbsp;|Softwares support proxy configuration
|Price             |High if you rent from vpn provider|Low
|Speed             |Varies depend on number of users<br/>usually depends on servers |Depend on servers
|Security          |Encryption (128-bit to 2048-bit)|Not encrypted
<br/></p>

<p>Because of the encryption, every accesses through VPN retrive the objects directly from the source.
This could slow down the user experience when hits a same object multiple times, such as icons in a webpage.
If there is a way that could cache web objects into VPN server, that will significantly increase the access speed, which get objects from local disk instead of downloading from source website.
Here, I should introduce the transparent proxy, which usually sets on the gateway and caches content from WWW requests.
It calls transparent because client side does not need any configuration.
Hence, every WWW requests through VPN need go to transparent proxy.</p>

<p>This installation guide is tested on Ubuntu 14.04 64bit.
VPN is set up by <a href="http://en.wikipedia.org/wiki/Point-to-Point_Tunneling_Protocol">pptp</a>.
Transparent proxy is on <a href="http://www.squid-cache.org">Squid3</a>.</p>

<ul>
<li><strong>pptp installation</strong></li>
</ul>


<p>In terminal, type the command bellow to install pptp server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install pptpd</span></code></pre></td></tr></table></div></figure>


<p>To restrict user access your VPN server, you also need to add users and passwords in <code>/etc/ppp/chap-secets</code>.
In the client column is user&rsquo;s name, the secret column is for passwords.
I masked mine for privacy.</p>

<p><img src="http://abnerchou.me/images/pics/user_password.jpg" alt="Set user and password"/></p>

<p>Add the following DNS to <code>/etc/ppp/pptpd-options</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ms-dns 8.8.8.8
</span><span class='line'>ms-dns 8.8.4.4</span></code></pre></td></tr></table></div></figure>


<p>Restart pptp server by command <code>service pptpd restart</code>. Check if it is running by <code>netstat -alpn | grep :1723</code>.</p>

<p>You also should enable the IP forwarding on your pptp server.
This would transfer the package between public ip and private ips on your server.
Open <code>/etc/sysctl.conf</code>, add the following line if not exist: <code>net.ipv4.ip_forward = 1</code>.
Then run <code>sysctl -p</code> to make the change effective.</p>

<p>Create NAT rule for iptables, and your VPN is ready to use:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iptables --table nat --append POSTROUTING -o eth0 -j MASQUERADE && iptables-save</span></code></pre></td></tr></table></div></figure>


<ul>
<li><strong>Squid3 installation</strong></li>
</ul>


<p>Similar to pptpd, typing the following in terminal:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install squid
</span><span class='line'>update-rc.d squid3 defaults</span></code></pre></td></tr></table></div></figure>


<p>The proxy is usable now, but it is the normal proxy with default settings.
To change it to transparent proxy, we need to edit the <code>/etc/squid3/squid.conf</code> file.
The squid.conf follows the rules of allow/deny order.
It obeys the first come first serve, the first matched rule will apply.
For example, if you put &ldquo;deny all&rdquo; at the first line of squid.conf, then the proxy denies all request.
If a rule does not indicate in squid.conf, then it defaults as deny.</p>

<p>First, find the line <code>http_port 3128</code>, change it to <code>http_port 3128 transparent</code>.
<strong> this is important </strong></p>

<p>Second, add the following rules:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>acl myhost src 192.168.0.1
</span><span class='line'>http_access allow myhost
</span><span class='line'>acl mymachine src 10.0.0.0/16
</span><span class='line'>http_access allow mymachine</span></code></pre></td></tr></table></div></figure>


<p>The &lsquo;192.168.0.1&rsquo; is my public ip, and the &lsquo;10.0.0.0/16&rsquo; is my private ips.
Restart squid <code>sudo service squid3 restart</code>.</p>

<p>Finally, we set the iptables to redirect all the traffic through 80 port to 3128 port that is our transparent proxy.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>iptables -t nat -A PREROUTING -i ppp0 -p tcp -m tcp --dport 80 -j REDIRECT --to-port 3128</span></code></pre></td></tr></table></div></figure>


<p>The transparent proxy is set up.</p>

<ul>
<li><strong>Restore iptables rules while system start up</strong></li>
</ul>


<p>Right now, you couldn&rsquo;t restart the system, otherwise the iptables will be set to empty again.
But you can input the previous iptables commands again to solve this.</p>

<p>Here I introduce a method that will do it once and for all.</p>

<p>Save iptables into <code>/etc/network/iptables.rules</code> by <code>iptables-save &gt; /etc/network/iptables.rules</code></p>

<p>Open <code>/etc/rc.local</code> and add the following line before &ldquo;exit 0&rdquo;:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>/sbin/iptables-restore &lt; /etc/network/iptables.rules</span></code></pre></td></tr></table></div></figure>


<p>Then our saved iptables rules will be loaded every time the system start up.</p>

<p>Enjoy your VPN server with transparent proxy!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why Sun is the center of our solar system]]></title>
    <link href="http://abnerchou.me/blog/2014/07/02/why-sun-is-the-center-of-our-solar-system/"/>
    <updated>2014-07-02T22:44:44-04:00</updated>
    <id>http://abnerchou.me/blog/2014/07/02/why-sun-is-the-center-of-our-solar-system</id>
    <content type="html"><![CDATA[<p>Because our Earth is in a system called Solar System.
I don&rsquo;t think the answer would be simple as that.
Why the Earth could not be the center?</p>

<p>Actually it could.
As we learn in physic, all motions are relative, like we feel we are still on the Earth, but we actually spin and orbit the Sun.
Moreover, we orbit the Sun, in another words that the Sun also orbits us.
This doesn&rsquo;t conflict with motion relative law.
But why we are not saying the Sun is orbiting Earth?</p>

<!-- more -->


<p>So let&rsquo;s see how the planets move during heliocentric system and geocentric system.
Here is the link: <a href="http://noahdragon.github.io/SolarSystem.js/">SolarSystem.js</a>.
You could click to switch the systems, and draw the orbit path for better viewing.</p>

<p>The heliocentric system shows perfect concentric circles of planets path, in contrast, the geocentric system looks like random motion.
Untile we draw their path, only the Sun&rsquo;s orbit is circle, the other planet tracks are like spiral.
After long enough years, the orbit will look like below picture:</p>

<p><img src="http://abnerchou.me/images/pics/geocentric.jpg" alt="Geocentric system orbits"/></p>

<p>It&rsquo;s totally mess!</p>

<p>This simulated program assumes the planets&#8217; orbit is circle and in the same surface.
In our real solar system, it is way more complicate.</p>

<p>I didn&rsquo;t do the history research about why heliocentrism won the theory battle.
But I know heliocentrism is better because it is simpler.
This also aligns with the philosophy of Unix/Linux programming:
K.I.S.S., which stands for &ldquo;Keep It Simple &amp; Straightforward&rdquo;.</p>

<p>Because of heliocentric system, we make satellite launch possible, and easily calculate the planets position.
Otherwise, I couldn&rsquo;t image how hard the job is for a mathematician to compute the correct route from the Earth to Mars.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Blog Here]]></title>
    <link href="http://abnerchou.me/blog/2014/03/11/my-first-blog-here/"/>
    <updated>2014-03-11T22:52:09-04:00</updated>
    <id>http://abnerchou.me/blog/2014/03/11/my-first-blog-here</id>
    <content type="html"><![CDATA[<p>Well, this is my first blog here (right now on github).</p>

<p>I&rsquo;m using the <a href="http://octopress.org">Octopress</a> as blog content management,
and I will briefly describe the way to set it up.</p>

<!-- more -->


<p>First, go to Octopress <a href="http://octopress.org/docs/setup/">setup page</a>.
Follow the instruction,
install the dependencies that Octopress will need.</p>

<p>Then choose the platform that the blog will be hosted on,
here is a link for <a href="http://octopress.org/docs/deploying/github/">deploying github pages</a>.
<strong>Note</strong>: an error occured while I followed the instruction to rake it.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rake aborted!
</span><span class='line'>You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6.
</span><span class='line'>Prepending <span class="sb">`</span>bundle <span class="nb">exec</span><span class="sb">`</span> to your <span class="nb">command </span>may solve this.
</span><span class='line'>/Users/Haochen/myBlog/octopress/Rakefile:2:in <span class="sb">`</span>&lt;top <span class="o">(</span>required<span class="o">)</span>&gt;<span class="err">&#39;</span>
</span><span class='line'><span class="o">(</span>See full trace by running task with --trace<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>This error could be easily solved by adding <code>bundle exec</code> in front of the <code>rake</code> command.</p>

<p>After <code>rake generate</code>, go to &lsquo;_deploy&rsquo; folder, and type <code>git pull origin master</code>.
Then type <code>rake deploy</code>.
Otherwise, there will be some errors:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>error: failed to push some refs to <span class="s1">&#39;git@gihub.com:your github page repo&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now, your blog page is on-line.
Although the pages are hosted on github,
you still need version control on your Octopress settings,
so don&rsquo;t forget to commit to the &lsquo;source&rsquo; branch.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git add .
</span><span class='line'>git commit -m <span class="s1">&#39;your message&#39;</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>(I&rsquo;d rather put them into a bash file than typing every time)</p>

<figure class='code'><figcaption><span>git_commit_source.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>!/bin/bash
</span><span class='line'>git add . <span class="o">&amp;&amp;</span>
</span><span class='line'>git commit -m <span class="s2">&quot;$1&quot;</span> <span class="o">&amp;&amp;</span> <span class="c">#first argument will be the commit message</span>
</span><span class='line'>git push origin <span class="nb">source</span>
</span></code></pre></td></tr></table></div></figure>


<p>To generate a blog page, you could use <code>rake new_post['blog name']</code>.
However, as I mentioned before the <code>rake</code> command wouldn&rsquo;t work properly if the ruby version didn&rsquo;t match.
We could use <code>bundle exec rake</code> to run the command.
Moreover, if you are using <strong>zsh shell</strong>, you should also add <code>noglob</code> in front of these command, because symbol &lsquo;[&rsquo; and &lsquo;]&rsquo; are reserved in zsh for regular expression.</p>

<p>Finally, my blog is here.
Much easier than I expected.
Using Octopress can save your time on setting a blog site, and it generates pages automatically.</p>

<p>This blog is still underconstruction. I would like to make it more simple and pretty.
K.I.S.S</p>

<p><strong>Update</strong> (several minutes later):
Encountered a problem of creating single page, e.g. 404.html.
The command <code>rake new-page['404']</code> cannot work on zsh due to &lsquo;[]&rsquo; is converted.
Hence, the only way to add cutomize page is to write a markdown file and put into &lsquo;source&rsquo; fold.
But, do not forget to add the following to the head of page:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>---
</span><span class='line'>layout: page
</span><span class='line'>title: <span class="s2">&quot;Super Awesome&quot;</span>
</span><span class='line'>date: 2011-07-03 5:59
</span><span class='line'>comments: <span class="nb">true</span>
</span><span class='line'>sharing: <span class="nb">true</span>
</span><span class='line'>footer: <span class="nb">true</span>
</span><span class='line'>---
</span></code></pre></td></tr></table></div></figure>


<p><strong>Update</strong> (2014-Mar-12):
<code>rake preview</code> has problem with Safari.
Don&rsquo;t know why but only show blank page while open <a href="http://localhost:4000">http://localhost:4000</a> .
Using Chrome or Firefox will solve this.[<a href="https://github.com/imathis/octopress/issues/1395">ref</a>]</p>

<p>Due to save typing, I have written some bash files:</p>

<figure class='code'><figcaption><span>deploy.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'>bundle <span class="nb">exec </span>rake generate <span class="o">&amp;&amp;</span>
</span><span class='line'>bundle <span class="nb">exec </span>rake deploy
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>preview.sh</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#!/bin/bash</span>
</span><span class='line'>
</span><span class='line'><span class="c"># set up the octopress preview</span>
</span><span class='line'><span class="c"># open http://localhost:4000 in Chrome</span>
</span><span class='line'><span class="c"># Safari has some wired error in it</span>
</span><span class='line'>
</span><span class='line'><span class="c"># if previous preview is running, stop it</span>
</span><span class='line'><span class="nv">preview_pid</span><span class="o">=</span><span class="sb">`</span>/bin/ps -fu <span class="nv">$USER</span>| grep <span class="s2">&quot;rake\ preview&quot;</span> | grep -v <span class="s2">&quot;grep&quot;</span> | awk <span class="s1">&#39;{print $2}&#39;</span><span class="sb">`</span>
</span><span class='line'><span class="nb">kill</span> -2 <span class="nv">$preview_pid</span>
</span><span class='line'>
</span><span class='line'>bundle <span class="nb">exec </span>rake generate <span class="o">&amp;&amp;</span>
</span><span class='line'>bundle <span class="nb">exec </span>rake preview &amp;
</span><span class='line'>
</span><span class='line'>sleep 5 <span class="c"># wait a while to make sure the preview already running</span>
</span><span class='line'>
</span><span class='line'><span class="c">#change the browser command if you are using a different OS and browser</span>
</span><span class='line'>/Applications/Google<span class="se">\ </span>Chrome.app/Contents/MacOS/Google<span class="se">\ </span>Chrome <span class="s1">&#39;http://localhost:4000&#39;</span>
</span><span class='line'>
</span><span class='line'>pidof <span class="s2">&quot;Google Chrome&quot;</span> | xargs <span class="nb">wait</span>
</span><span class='line'><span class="nv">preview_pid</span><span class="o">=</span><span class="sb">`</span>/bin/ps -fu <span class="nv">$USER</span>| grep <span class="s2">&quot;rake\ preview&quot;</span> | grep -v <span class="s2">&quot;grep&quot;</span> | awk <span class="s1">&#39;{print $2}&#39;</span><span class="sb">`</span>
</span><span class='line'><span class="nb">kill</span> -2 <span class="nv">$preview_pid</span>
</span><span class='line'><span class="c">#echo &quot;$preview_pid&quot;</span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;Preview DONE!&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Please ignore the text below, the latest code fixes all of them. :P</p>

<p><del><strong>Warnning</strong>:
This preview shell script may not work for you if you are a ruby developer,
or you are using some programs written or depended in/on ruby or ruby packages,
because it killed all ruby processes at the end.
Do not forget to fully quit Chrome (Comman+q in MacOS) before starting a new preview,
otherwise unknown error would occur (duplicate processes).</del></p>

<p><del>BTW, the preview.sh also left a messy terminal for you.
Well, everything have side effects.
But you could add <code>clear</code> command at the end of the script,
if you don&rsquo;t really care about the traces.</del></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《VIM-Adventures攻略》 LEVEL 4、5]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/03/10/VIM-Adventures%E6%94%BB%E7%95%A5-LEVEL-4-5/"/>
    <updated>2014-03-10T20:15:00-04:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/03/10/VIM-Adventures攻略-LEVEL-4-5</id>
    <content type="html"><![CDATA[<p>上一篇文章忘记说明文本编辑器的模式：</p>

<blockquote><p>所有文本编辑器都至少有两种模式，编辑模式和控制模式。编辑模式就是普通的文本输入，但控制模式似乎并不多见。由于平时我们所用的word并没有明确的区分这两种模式，但通过快捷键及按钮辅助，控制模式对我们也不是很陌生。</p>

<p>在vim中这两种模式的切换是通过Esc键来完成的，有明确的划分。在控制模式下键盘的按键不再是简单字符，而是具有相应的控制功能。</p>

<p>简单这么说明下，也就方便理解学习这些快捷键的重要性了。</p></blockquote>

<p><strong>公告：</strong>《VIM-Adventures》的作者愿意免费赠送一个此游戏的激活码给在本系列攻略中留言的用户。活动详情请见本文末。</p>

<p>前三关是试玩关卡，难度还算简单；但其后的关卡是越来越难。</p>

<p><strong>第四关：</strong></p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/101035419231391.jpg" alt="" /></p>

<p>本关学习按键：</p>

<ul>
<li>W 跳转到下一个字符串的首字母 （对应英文单词Word）</li>
<li>E 跳转到下一个字符串的尾字母 （对应英文单词End）</li>
<li>r 更改一个字符 （对应英文单词Replace）</li>
</ul>


<p>本关相对比较简单，只需要按照要求练习删除和修改就可通关。</p>

<p>关于W、E与w、e的区别，可以参考<a href="http://www.cnblogs.com/dreamstar/p/3581421.html">B与b的区别</a>。</p>

<p><strong>第五关：</strong></p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/101039492515063.jpg" alt="" /></p>

<ul>
<li>d 可与w、e、b、W、E、B、h、j、k、l、d等字符组合，用来删除字符串或者句子。 （对应英文单词Delete）</li>
</ul>


<p>首先通过删除和修改来获得d键，这个比较简单和第四关差不多。</p>

<p>通过提示可以获知，d键与其它已习得的按键组合，可以达到快速删除字符、单词、字符串、以及句子、段落的效果。</p>

<p>简单说明下其主要组合：</p>

<ul>
<li>dl 与x功能一样，删除光标下一个字符，相当于键盘上的Del； dh 与之相反，功能相当于键盘上的backspace</li>
<li>dw、de、dW、dE 均为向后删除一个单词或字符串，区别在于de/dE是从当前位置到单词或字符串末尾，而dw/dW是删除当前位置到下一个单词或字符串之前</li>
<li>db、dB 向前删除一个单词或字符串。需要注意的是光标下的字符不删除</li>
<li>dk、dj 分别是向上和向下删除两行</li>
<li>dd 删除本行</li>
</ul>


<p>本关难点在下图标注的蓝色区域：</p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/101103428298997.jpg" alt="" /></p>

<p>在没有提示的情况下很难想到dj或dk可以删除两行。另外一点是，X所在的位置没有标注要删除，但注意最下方的一行话：“BTW， X does mark the spot”也就是说X即是标记所在的位置，站在上图标注的蓝色方框&#8221;.&ldquo;上，按dB即可删除X （直接在X上按x键是不行的，不过系统会提示正确方法）。</p>

<p>第五关卡了好久，就是没有明白他所说的“X does mark the spot”的具体含义，浪费了不少时间。</p>

<p>下一章节第6关，敬请期待～</p>

<p><strong>活动详情</strong></p>

<p>用户需要达成以下两个要求即可获得抽奖资格：</p>

<ol>
<li>在本系列文章中留言；</li>
<li><del>推荐本系列的任一文章。</del>关注博主。</li>
</ol>


<p>（如果可能的话再<del>关注下博主</del>推荐本系列任一文章，不胜感激。）</p>

<p>（更新：由于无法获知谁推荐了文章，所以还是以留言和关注信息作为抽奖标准吧。）</p>

<p>抽奖将在本系列文章连载结束后进行，届时将通过博客园站内信通知获奖用户。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《VIM-Adventures攻略》 LEVEL 1-3]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/03/04/VIM-Adventures%E6%94%BB%E7%95%A5-LEVEL-1-3/"/>
    <updated>2014-03-04T19:15:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/03/04/VIM-Adventures攻略-LEVEL-1-3</id>
    <content type="html"><![CDATA[<p>上期有人提到此游戏烂尾。其实没有啦，作者是位“贪财”的主，不付费不给玩剩下的章节。在第三关结束时的提示也没有明确说要付费的意思。毕竟是独立游戏，要求也不能那么高了。</p>

<p><strong>第一关：</strong></p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/042213302963186.png" alt="" /></p>

<p>学习按键（大小写有区别）：</p>

<ul>
<li>h 向左</li>
<li>j 向下</li>
<li>k 向上</li>
<li>l 向右</li>
<li>:help 查看帮助文档可以在其后跟字符来查看相应字符的功能如“:help j”</li>
</ul>


<p>这一关相对比较简单，主要是熟悉下vim的光标操作。有点难度的地方是如何过最后三个反向斜坡。这里需要用到vim的光标记忆功能（不知道是不是这么叫），即在上一行光标所在的位置，到下一行也是同样位置，如果下一行较短，光标将停留在其末尾。</p>

<p>所以我们只需要在以下三个点分别按j，k即可通过：</p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/042251226392933.jpg" alt="" /></p>

<p><strong>第二关：</strong></p>

<p>第一关的宝箱不用管，因为这是只有到第三关才能获取的。</p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/042337293664020.jpg" alt="" /></p>

<p>第二关可以习得的按键（必须要捡到相应的按键方可以使用）：</p>

<ul>
<li>w 光标向前移动到下个单词首字母</li>
<li>e 光标向前移动到单词尾字母</li>
<li>b 光标向后移动到单词首字母</li>
</ul>


<p>这样轻轻松松就可以拿到通往下一关的三个钥匙。石头是可以被越过的，可以把w,e,b想象成单词间穿梭的传送，石头或墙是无法阻挡的。</p>

<p><strong>注</strong>：这里先别惦记着第一关的箱子，这里学习的按键还无法取得，而且还需要钥匙。后面将会有说明。</p>

<p><strong>第三关：</strong></p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/042302553129920.jpg" alt="" /></p>

<ul>
<li>B 光标向后移动到字符串首</li>
<li>x 删除字符串</li>
</ul>


<p>B 和 b 的区别是什么呢？ 假设我们有个字符串“Hello World!!!”我们光标在句子末尾的感叹号上，此时按b，光标会跳到第一个感叹号上，按B，光标会跳到W上。看到区别了么？ 一个是单词，一个是字符串。在vim中，连续的字母或符号可以认为是一个单词，而连续的字母和符号可以组成字符串。这也就是说如果只有b键的话到第一关的箱子那，仍然会被石头卡住。</p>

<p>x按键的取得要通过下面的小岛，要在30秒内到达。这里有个小技巧，就是w，e来回按即可，按w不行就按e，e不行就w，总之不太费劲。</p>

<p>用x按键将红色字符删除后，就会出现宝箱钥匙。</p>

<p>拿上宝箱钥匙到第一关宝箱的“!”处，用B键即可跳入，取得蜡烛。</p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/042332553331602.jpg" alt="" /></p>

<p>此时阴影笼罩了，vim大陆，作为勇者的你要将这仅有的希望之光带给大陆的人民。</p>

<p>摸黑返回第三关，即可开启第四关。</p>

<p><strong>前三关总图</strong></p>

<p><img src="http://images.cnitblog.com/blog/605265/201403/042332357445216.jpg" alt="" /></p>

<p>这就是免费的前三关，如果希望玩其后的十关需要付费，价格是$25。</p>

<p>可气的是竟然只能玩6个月……要不说作者“贪财”呢。不过能够将学习难度如此之高的vim编辑器做成游戏也很有创意的，通过前三关已经学到不少东西。如果真的有心学习的话$25不就相当于一本书钱，而6个月呢……就是一把皮鞭，催促着你快速学习……</p>

<p>好吧只能阿Q般的纪念我逝去的$25了……</p>

<p>下期将带来<a href="http://www.cnblogs.com/dreamstar/p/3591382.html">第4，第5关</a>的攻略，敬请期待～</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[《VIM-Adventures攻略》前言]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/03/02/VIM-Adventures%E6%94%BB%E7%95%A5-%E5%89%8D%E8%A8%80/"/>
    <updated>2014-03-02T19:15:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/03/02/VIM-Adventures攻略-前言</id>
    <content type="html"><![CDATA[<p>自从有了计算机，人们就想向其灌输自己的想法。</p>

<p>要想对其输入，自然离不开文本编辑器。</p>

<p>公告：《VIM-Adventures》的作者愿意免费赠送一个此游戏的激活码给在本系列攻略中留言的用户。活动详情请见本文末。</p>

<p>最近一直在学习Emacs，这个几乎和我同龄的软件，在发展如此迅速的时代依然有不少程序员的死忠粉，不禁让人诧异。友人常问：“现在既然都有IDE了，还学那么古老的编辑器干什么？” 刚开始我也这么认为，但自从在Linux下写程序后才发现，Linux的IDE是多么的坑了。且不说安装要费老半天劲（apt-get 得到的一般不是最新版本），装好后调试编译环境又是半天，最可气的是，一切都弄好后，突然要换电脑工作，我总不能把硬盘拔了带着吧。而且常用IDE产生了IDE依赖症，甚至不用某个厂商的IDE，就不会写代码了。于是在网上就找到了Emacs，支持自定义化配置，配置文件小巧可随时备份，甚至可以用来煮咖啡。</p>

<p>等等，等等，题目是vim啊，说了半天Emacs是作甚？当然我认识vim比Emacs要早，因为vim是Linux系统自带的vi的进阶版。当时是为了远程修改一些配置文件才不得已学了两下，但发现其不够直观，进入后完全不知道该如何操作。也就了解了下如何插入，修改罢了。</p>

<p>但Emacs欢迎界面就有一个15分钟左右的教程（怎么又扯回Emacs了）。上手难度陡降，但发现越学深入越有东西要学，比如系统配置，eLisp语言，自定义插件等等……一切都还好，但……但……光标的移动有点太……难了吧……C+n下一行，C+p上一行，C+v下一页，M+v上一页，C+f向后，C+b向前（C代表Ctrl，M代表Alt或类似键）……有时只需要光标向后移一下，竟然要按两个键，有点太低效了吧。这时候vim闪亮登场（我是用Emacs下的Evil插件来实现vim控制的），它的控制只需要h,j,k,l,单键即可控制光标移动，有点像上下左右方向键。所以，我觉得有必要结合Emacs和vim来降低其学习曲线了：</p>

<p>常见编辑器的学习曲线&lt;图></p>

<p>vim的入门难和Emacs的后期变态让人望而生畏。vim入门难，到底难在什么地方呢？难在养成一种习惯，即键盘上26个按键不再是普通的按钮，其还附有了特殊的意义。而且其上下左右键是k,j,h,l，这是多么的蹩脚啊，为啥不向CS学习下设置成w,s,a,d。因为w，s，a，d其本身还有特殊含义。vim的按键已经可以算是最优了，在不触动鼠标的情况下，可以快速完成各种操作，比如dd是删除一行，db是删除前一个单词，dk是向前删除两行等等。以前都是要多次按键，或者用鼠标协作，现在完全可以用键盘快速完成。</p>

<p>有的人用不惯vim的方向键就早早的退出了。其实只要练习，没有什么难的，这里有个简单的贪吃蛇游戏，就是用vim的方向键来控制。在吃的时候要按 i (即vim里的插入功能) 才可以，并且在吃完后按Esc返回键盘控制。我的最高分只有700。 T_T</p>

<p>当然这里要说的VIM-Adventures 不单单用游戏的形式来练习光标控制，还可以通过游戏学习到vim的按键操作。通过其可以学习的操作有：</p>

<p>h j k l : w W e E b B x X r d dd D ~ 0 ^ $ f F t T ; , % z zt zz zb g gg G 1 2 3 4 5 6 7 8 9 count [count] * # n N p P &ldquo; y yy Y reg :reg registers &rdquo;&ldquo; &rdquo;- &ldquo;_ &#8220;0 &#8220;1 &#8220;2 &#8220;3 &#8220;4 &#8220;5 &#8220;6 &#8220;7 &#8220;8 &#8220;9 &#8220;a &#8220;b &#8220;c &hellip; &#8220;x &#8220;y &#8220;z &#8220;A &#8220;B &#8220;C &hellip; &#8220;X &#8220;Y &#8220;Z i I a A c cc C s S o O word WORD sentence paragraph { } ( ) [{ ]} [( ]) . text-objects aw iw aW iW as is ap ip a[ a] i[ i] a( a) i( i) a&lt; a> aB iB ab ib i&lt; i> at it a{ a} i{ i} a&rdquo; i&#8221; a&#8217; i&#8217; a<code>i</code> H M L nu nonu nu! nonu! | / ? ` &lsquo; m :marks :delm :delmarks :delm! :delmarks! undo u :undo CTRL-R :redo redo</p>

<p>在其后的章节，我将详细讲解其每一关的攻略。因为我发现本游戏不光需要知道vim的操作，还有一定的解谜成分。并通过游戏本身了解到vim编辑器一些自身的特性。</p>

<p>敬请期待～</p>

<p>LEVEL 1-3</p>

<p>LEVEL 4 5</p>

<p>抽奖活动详情</p>

<p>用户需要达成以下两个要求即可获得抽奖资格：</p>

<p>在本系列文章中留言；
关注博主。
（如果可能的话再推荐本系列任一文章，不胜感激。）</p>

<p>抽奖将在本系列文章连载结束后进行，届时将通过博客园站内信通知获奖用户。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你有强迫症么？]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/27/do-you-have-odc/"/>
    <updated>2014-02-27T23:12:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/27/do-you-have-odc</id>
    <content type="html"><![CDATA[<p>好像强迫症最近突然的流行起来，好像谁没点强迫症都不好意思见人。</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272253582995159.jpg" alt="谢耳朵" height="530" width="415" align="absmiddle" /></p>

<p>这个程序的灵感来源<a href="http://www.bilibili.tv/video/av984435/">MikeZTM</a>在其游戏视频中说的一句话，于是就想在Android上实现一下怎样呢？</p>

<p>MikeZTM说的是做一个App，就显示信息提示，其它什么都不做，看强迫症怎么办？</p>

<!-- more -->


<p><img src="http://images.cnitblog.com/blog/605265/201402/272304084071686.jpg" alt="ios" height="107" width="320" align="absmiddle" /></p>

<p>这是ios系统特有的一种功能，想着挺简单的一个实现啊，那就做做试试吧。</p>

<p>一做才知道原来Android是不支持修改应用图标的。在经过几轮谷歌搜索后，有两种解决方案：
1. 使用Widget来模拟图标，然后再用RemoteViews来控制用户点击事件。
2. 在Android的项目的Resource中添加多款图标，在程序执行时更换图标。</p>

<p>第二种方法明显费力不讨好。因为不可能做成百上千个图标来仅仅为实现一个提示功能，所以只能用第一种方案。</p>

<p>实现效果：</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272325102973466.png" alt="" height="420" width="260" align="absmiddle" /></p>

<p>第一种方案需要解决的就是Widget和应用间的通信，因为widget在系统中相当于独立进程，所以之间通讯需要使用PendingIntent。</p>

<p>仍需改进的地方: 如何获取单独Widget的ID号，这样可以让不同Widget有不同的显示。总点击计数及修改图标在MainActivity里。</p>

<p>应用下载地址：<a href="http://pan.baidu.com/s/1sjFDikl">http://pan.baidu.com/s/1sjFDikl</a></p>

<p>使用方法：</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272323445937216.png" alt="Widget" height="420" width="260" align="absmiddle" />
1. 安装程序后，拖拽此程序的Widget到主界面。
2. 疯狂点击，感受强迫症的焦躁吧！ ^_^</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272317242935234.png" alt="" height="420" width="260" align="absmiddle" /></p>

<p>具体实现代码可见<a href="https://github.com/NoahDragon/do-you-have-ocd">源代码</a>，第一次写Android，很多尝试及注释没清理，望见谅。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[你有强迫症吗？]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/27/%E4%BD%A0%E6%9C%89%E5%BC%BA%E8%BF%AB%E7%97%87%E5%90%97/"/>
    <updated>2014-02-27T19:15:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/27/你有强迫症吗</id>
    <content type="html"><![CDATA[<p>好像强迫症最近突然的流行起来，好像谁没点强迫症都不好意思见人。</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272253582995159.jpg" alt="谢耳朵" height="530" width="415" align="absmiddle" /></p>

<p>这个程序的灵感来源<a href="http://www.bilibili.tv/video/av984435/">MikeZTM</a>在其游戏视频中说的一句话，于是就想在Android上实现一下怎样呢？</p>

<p>MikeZTM说的是做一个App，就显示信息提示，其它什么都不做，看强迫症怎么办？</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272304084071686.jpg" alt="ios" height="107" width="320" align="absmiddle" /></p>

<p>这是ios系统特有的一种功能，想着挺简单的一个实现啊，那就做做试试吧。</p>

<p>一做才知道原来Android是不支持修改应用图标的。在经过几轮谷歌搜索后，有两种解决方案：</p>

<ol>
<li>使用Widget来模拟图标，然后再用RemoteViews来控制用户点击事件。</li>
<li>在Android的项目的Resource中添加多款图标，在程序执行时更换图标。</li>
</ol>


<p>第二种方法明显费力不讨好。因为不可能做成百上千个图标来仅仅为实现一个提示功能，所以只能用第一种方案。</p>

<p>实现效果：</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272325102973466.png" alt="" height="420" width="260" align="absmiddle" /></p>

<p>第一种方案需要解决的就是Widget和应用间的通信，因为widget在系统中相当于独立进程，所以之间通讯需要使用PendingIntent。</p>

<p>仍需改进的地方: 如何获取单独Widget的ID号，这样可以让不同Widget有不同的显示。总点击计数及修改图标在MainActivity里。</p>

<p>应用下载地址：<a href="http://pan.baidu.com/s/1sjFDikl">http://pan.baidu.com/s/1sjFDikl</a></p>

<p>使用方法：</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/272323445937216.png" alt="" height="420" width="260" align="absmiddle" /></p>

<ol>
<li>安装程序后，拖拽此程序的Widget到主界面。</li>
<li>疯狂点击，感受强迫症的焦躁吧！ ^_^</li>
</ol>


<p><img src="http://images.cnitblog.com/blog/605265/201402/272317242935234.png" alt="" height="420" width="260" align="absmiddle" /></p>

<p>具体实现代码可见<a href="https://github.com/NoahDragon/do-you-have-ocd">源代码</a>，第一次写Android，很多尝试及注释没清理，望见谅。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解读 《2014 最流行编程语言》 by Code Eval]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/23/%E8%A7%A3%E8%AF%BB-2014-%E6%9C%80%E6%B5%81%E8%A1%8C%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80-by-Code-Eval/"/>
    <updated>2014-02-23T19:15:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/23/解读-2014-最流行编程语言-by-Code-Eval</id>
    <content type="html"><![CDATA[<p><img src="http://images.cnitblog.com/blog/605265/201402/230529284143047.jpg" alt="" /></p>

<p>原文：<a href="http://blog.codeeval.com/2014#.UwkgkHVdWKk">点我</a>
原文翻译：<a href="http://blog.jobbole.com/58268/#comment-40102">点我</a></p>

<p>首先了解下<a href="http://www.codeeval.com">CodeEval</a>是做什么的:</p>

<blockquote><p>A tool for auto evaluating programming challenges in C/C++/Java/Python/Ruby/PHP/Perl/ Scala/Clojure/C#/Tcl/JavaScript/ Haskell/Go/Bash/Lua and many more.</p></blockquote>

<p>重点是这个Programming Challenges， 也就是说给定题目，让用户来解题，支持如上列出的多种语言，但不支持第三方库。</p>

<p>这个编程语言排行也是根据用户解题时所用语言而制作出来的。所以这个排行无法看作是计算机行业对编程语言的需求。</p>

<p>就个人体验而言，在其上解题的用户有以下几种特征：</p>

<ol>
<li>学习编程；</li>
<li>熟悉一种新的程序语言；</li>
<li>应聘相应工作（CodeEval会定期举行解题赢取面试机会的活动）。</li>
</ol>


<p>对于第一种用户，他们使用的语言可能比较基本和常见，不会使用网络端常见的Ruby，PHP，Perl等语言。</p>

<p>而第二种用户，是已经掌握了一至二种语言，需要练习第三种语言，纯为娱乐。往往会使用一些与主流程序语言，或者其工作中常用的程序语言所不同的。</p>

<p>第三种用户，为了获取面试机会，一定会选取高效快速的程序语言。</p>

<p>再者，由于解题多用到命令行文件输入，就笔者经验（C/C++/C#/Java/Python/JavaScript/PHP),Python的文件操作最简单快捷。对于字符串转浮点整形等也是相当轻松。有些题目甚至Python只需一个函数就解决了，比如将输入文本的字母大写转成小写，小写转成大写。</p>

<p>之所以<a href="http://www.python.org/">Python</a>为何能成为榜首，可以看出：一是由于其简单易学，二是由于其方便简洁的文本文档的操作方式，三是丰富的内置函数。</p>

<p>Code Eval对程序的硬性限制只有一条（除去编译错误），就是运行时间不得超过10秒。但就其简单和中级的题（占总题量70%左右）来看，要写出超过10秒运行的程序也难。</p>

<p>在挑战题目时，用户也不许要考虑内存，CPU运算速度，网络，硬盘操作等问题。（具体CodeEval的编译环境配置未知）</p>

<p>综上，Python远较其它语言更适合进行解题。但鄙人在日常使用Python时，深受其速度拖累，核心算法还是首选C++或Java。</p>

<p>总而言之，这个排行榜只是一种兴趣级别的语言排行，而非企业应用级的排行。对于没有计算机学科基础，但又对编程感兴趣的同学，可以先从Python学起；Python作为兴趣级别的使用已经足够了，只不过以后要转C/C++可能会很不适应。 ^_^</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/230531525241340.png" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[解读《CodeEval 2014 最流行编程语言》]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/23/understand-codeeval-2014-most-popular-programming-language/"/>
    <updated>2014-02-23T17:16:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/23/understand-codeeval-2014-most-popular-programming-language</id>
    <content type="html"><![CDATA[<p><img src="http://images.cnitblog.com/blog/605265/201402/230529284143047.jpg" alt="" /></p>

<p>首先了解下<a href="http://www.codeeval.com">CodeEval</a>是做什么的:</p>

<blockquote><p>A tool for auto evaluating programming challenges in C/C++/Java/Python/ Ruby/PHP/Perl/ Scala/Clojure/C#/Tcl/ JavaScript/ Haskell/Go/ Bash/Lua and many more.</p></blockquote>

<p>重点是这个Programming Challenges， 也就是说给定题目，让用户来解题，支持如上列出的多种语言，但不支持第三方库。</p>

<p>这个编程语言排行也是根据用户解题时所用语言而制作出来的。所以这个排行无法看作是计算机行业对编程语言的需求。</p>

<!-- more -->


<p>就个人体验而言，在其上解题的用户有以下几种特征：</p>

<ol>
<li>学习编程；</li>
<li>熟悉一种新的程序语言；</li>
<li>应聘相应工作（CodeEval会定期举行解题赢取面试机会的活动）。</li>
</ol>


<p>对于第一种用户，他们使用的语言可能比较基本和常见，不会使用网络端常见的Ruby，PHP，Perl等语言。</p>

<p>而第二种用户，是已经掌握了一至二种语言，需要练习第三种语言，纯为娱乐。往往会使用一些与主流程序语言，或者其工作中常用的程序语言所不同的。</p>

<p>第三种用户，为了获取面试机会，一定会选取高效快速的程序语言。</p>

<p>再者，由于解题多用到命令行文件输入，就笔者经验（C/C++/C#/Java/Python/JavaScript/PHP),Python的文件操作最简单快捷。对于字符串转浮点整形等也是相当轻松。有些题目甚至Python只需一个函数就解决了，比如将输入文本的字母大写转成小写，小写转成大写。</p>

<p>之所以<a href="http://www.python.org/">Python</a>为何能成为榜首，可以看出：一是由于其简单易学，二是由于其方便简洁的文本文档的操作方式，三是丰富的内置函数。</p>

<p>Code Eval对程序的硬性限制只有一条（除去编译错误），就是运行时间不得超过10秒。但就其简单和中级的题（占总题量70%左右）来看，要写出超过10秒运行的程序也难。</p>

<p>在挑战题目时，用户也不许要考虑内存，CPU运算速度，网络，硬盘操作等问题。（具体CodeEval的编译环境配置未知）</p>

<p>综上，Python远较其它语言更适合进行解题。但鄙人在日常使用Python时，深受其速度拖累，核心算法还是首选C++或Java。</p>

<p>总而言之，这个排行榜只是一种兴趣级别的语言排行，而非企业应用级的排行。对于没有计算机学科基础，但又对编程感兴趣的同学，可以先从Python学起；Python作为兴趣级别的使用已经足够了，只不过以后要转C/C++可能会很不适应。 ^_^</p>

<p><img src="http://images.cnitblog.com/blog/605265/201402/230531525241340.png" alt="" /></p>

<p>英文报道：<a href="http://blog.codeeval.com/2014#.UwkgkHVdWKk">点我</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[断翅]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/21/%E6%96%AD%E7%BF%85/"/>
    <updated>2014-02-21T19:15:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/21/断翅</id>
    <content type="html"><![CDATA[<p>梦·翱翔</p>

<p>飞过蓝色的空，身后划过淡淡的痕迹。骄傲地望向身后，一望无际的白云与山峦。面前是无边的海，海的尽头是温暖的南海岛国。</p>

<p>心间·云海</p>

<p>曾经听老一辈们说，云层的云层上面是一片海，天蓝色的。那里是云的故乡，云都是从那里来的。层层的云端到底是什么地方，童年的梦都发生在那里……</p>

<p>云·云上</p>

<p>一遍一遍的努力，千百次的挥动翅膀，在那云海中穿梭。目标，天与海的交界，永无黑暗。</p>

<p>Update: 四五年前（？估计不止）写的了，还是发表了吧，事过境迁，灵感已逝，已忘记当时所要表达的主题了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[给简书的一点建议]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/17/%E7%BB%99%E7%AE%80%E4%B9%A6%E7%9A%84%E4%B8%80%E7%82%B9%E5%BB%BA%E8%AE%AE/"/>
    <updated>2014-02-17T11:46:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/17/给简书的一点建议</id>
    <content type="html"><![CDATA[<p><img src="http://i1.sinaimg.cn/dy/c/sd/2011-02-28/U2494P1T1D22028511F21DT20110228172620.jpg" alt="" /></p>

<p>最为简书的新人，一上来就提意见，是不是有点太……实诚了。所以很谦虚的说“一点”。其实也正因为新，所以还有一定的适应期，就把所有感受到的不便罗列如下。 ^_^</p>

<p><em>这些建议都成型于两周前左右，期中可能简书有所更新，有些问题可能已不存在。</em></p>

<ul>
<li>阅读量刷新即得</li>
</ul>


<p>这点是所有网页的老问题了，将每次点开页面都算作是阅读量。这个数据明显不准确，作者无法了解自己文章的趋势，同时也可以利用刷新的方法来恶意增加阅读量。</p>

<ul>
<li>整天码字的不光有作家，还有程序员</li>
</ul>


<p>Markdown模式已经非常方便了。但对于程序员可能更希望使用自己平时写代码的工具来写博客。这就需要简书开放接口，一是可以满足程序员的Geek情节；二是促进简书的发展，吸引程序员开发相关应用。</p>

<!-- more -->


<ul>
<li>网站帮助联系信息要拖到网页最下才可看到</li>
</ul>


<p>起先还以为是左边图片右下角的那个感叹号呢……找了半天才找到网站帮助与联系信息，或许这些对于新用户比较重要的信息应该放在更易找到的地方。</p>

<ul>
<li>为何主页左边图片右下角的链接是跳转到Tumblr</li>
</ul>


<p>虽然是简叔的主页，但给人一种奇怪的感觉。因为简叔在简书上也有主页，为什么要链接到他的Tumblr页面呢？</p>

<ul>
<li>用户头像的下拉列表找不到写文章的按钮</li>
</ul>


<p>这个明显不符合正常的操作习惯。用户头像的下拉列表一般都包含所有的用户可操作功能。</p>

<ul>
<li>专题页面过长，没有相关分类</li>
</ul>


<p>找一个相关专题很麻烦。专题投稿或许可以添加在文本发布中。而且专题页上的搜索，是跳转到Google进行全站检索。对于专题的关键字完全可以控制为自动跳转。比如在专题页的搜索框输入：“程序员”，自动跳转到程序员的专题页，而非进入Google页面再点击。这个实现相对比较简单，就是需要建立个Hashmap，但对用户体验会有提升。</p>

<ul>
<li>动态头像闪啊闪</li>
</ul>


<p>这个允许上传动态头像并不太好。刚开始觉得好玩，但后来发现显示在主页的时候头像也是动态的。当然一两个用户或许影响不大，但如果满屏用户都使用动态图片，那与一般网页上闪动的小广告何异呢？或许可以限制动态图像显示的区域，比如只在用户主页上显示，但简书主页，以及用户右上角小图标使用动态图片第一帧作为静态。</p>

<ul>
<li>提醒，简信，我的闪光点</li>
</ul>


<p>不知有何区别？为何要设置这么多种提醒的模式，集合成一个不好么？</p>

<ul>
<li>最新动态</li>
</ul>


<p>为何有自己的信息？ 自己或许并不需要提醒自己最近做了什么吧？自己更关心的是喜欢用户所发的文章。或许增加个过滤器，可以让用户自己选择是显示评论动态，还是文章，甚至两者都有。</p>

<ul>
<li>搜索跳谷歌</li>
</ul>


<p>在Mac上有个BUG，就是跳转谷歌后显示的是空页面，并不是搜索结果。同时感觉哪怕使用iframe的方式，也不要跳转出去较好。跳转出去后原有的简书边框，用户图标等均缺失。如想执行其它操作就需要切换回来，比较影响用户体验。对于自建网页搜索引擎，推荐使用开源的<a href="https://nutch.apache.org">Apache Nutch</a>。</p>

<ul>
<li>写作页面分三列是为何？</li>
</ul>


<p>虽然比较像Mac的文件管理模式，但感觉占用了太多的屏幕空间。如果可以自动展开或收缩就完美了。</p>

<ul>
<li>&ldquo;我喜欢的&#8221;和&#8221;动态&#8221;功能</li>
</ul>


<p>这两个功能有重叠，而且在“我喜欢的”页面里无法编辑喜欢用户或者文章，比如取消喜欢，或者分类等。</p>

<ul>
<li>喜欢和分享文章在最下</li>
</ul>


<p>有时候看完忘记点了又要回来拖动一遍进度条。可以做成浮动窗口，与用户小头像同步即可。</p>

<ul>
<li>自己可以喜欢自己的文章</li>
</ul>


<p>和自己给自己点赞一样，这一种深沉的寂寞。</p>

<ul>
<li>用户页面点开文章后再返回，会发现以前展开的查看更多的文章又收回去了</li>
</ul>


<p>后来发现主页文章打开方式都是弹窗的完全不需要用浏览器的后退键，可是弹窗在Mac用起来感觉很别扭（切换窗口比网页的前进后退要麻烦，用过Mac的Touchpad的童鞋都懂的）。与此对应的是用户主页却不弹窗。有时翻到老后面了，点击查看了一篇文章返回后又到了第一页。如果还想看，就得一遍一遍的点开“点击查看更多”。</p>

<ul>
<li>主页点击文章打开新的窗口，mac上用起来不方便</li>
</ul>


<p>理由同上。同时对于平板和手机上查看简书文章造成不便。</p>

<ul>
<li><a href="http://logdown.com">Logdown</a>: Markdown上传图片解决方案</li>
</ul>


<p>Logdown提供的编辑器可以加强Markdown的功能，不仅支持图片拖拽上传，还支持LaTex的公式标记（这个功能感觉国内博客鲜有）。可以供简书作为借鉴和参考。</p>

<ul>
<li>@功能</li>
</ul>


<p>这个只是随便想出来的。增加@功能可以加强用户间的互动。同时有特殊诉求也可以直接@系统管理员，拉近网站管理者与用户间的距离。</p>

<ul>
<li>邮件无人回复</li>
</ul>


<p>大概两三周前，给简书邮箱<a href="mailto:contact@jianshu.io">contact@jianshu.io</a>发了封邮件，询问关于简书是否开放API的问题，至今无人回复。我很理解国内工作忙，不查看邮件的行业习惯。但写在联系方式里的联系方式无法联系，还是很令人失望的。</p>

<ul>
<li>写博客时自动保存太频繁</li>
</ul>


<p>这是刚刚写此文时的感受。右上角频繁显示保存中，已保存的提示，总以为有什么重要信息似的。这样频繁的保存是好的，可以防止突发事件导致文件丢失。但至少可以做得人性化一些，比如静默提醒，或者使用小图标的显示。</p>

<ul>
<li>发布文章按钮不明显</li>
</ul>


<p>好吧这个是凑数的。虽然发过一篇文章，但第二次发文，我还是要找一下发布键。</p>

<blockquote><p><strong>后记</strong>：
从近一个月使用简书的体验来看，非常喜爱，各方面都给人以美感。写这么些建议完全是希望简书越办越好，真没有吹毛求疵，以及鸡蛋里挑骨头啊……（好吧，其实大部分还是就我个人感受而言 :P）但如果能修复以上问题，至少对于我来说会感觉简书用起来更舒适的。</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[病疾理心的员序程]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/16/%E7%97%85%E7%96%BE%E7%90%86%E5%BF%83%E7%9A%84%E5%91%98%E5%BA%8F%E7%A8%8B/"/>
    <updated>2014-02-16T22:26:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/16/病疾理心的员序程</id>
    <content type="html"><![CDATA[<p><img src="http://xradeon.com/wp-content/uploads/2013/11/programmer1.png" alt="" /></p>

<p>题目请倒过来读。</p>

<p>如果读过原文的，一看就明了此文的用意。是针对<a href="http://www.yinwang.org/">王银</a>的《<a href="http://www.yinwang.org/blog-cn/2014/02/09/programmer-mental/">程序员的心理疾病</a>》的一篇反文。</p>

<p>也不能说是错，但作者夸张得以偏盖全，以点盖面，一棒子拍倒一片程序员。程序员真的如此不堪？这么多的缺点，甚至都不配称之为工程师？</p>

<p>总结一下，原文主要说了IT行业以下几个缺点：</p>

<!-- more -->


<ul>
<li>自负自大</li>
<li>崇拜权威</li>
<li>窝里斗</li>
</ul>


<p>作者的整片文章就已经很好的阐述了程序员自负自大的这个理念。没有贬低作者的意思，他在计算机程序语言方面的成就是有目共睹的。但如下的评述是自信，自负，还是自大呢？至少没有看出一点谦虚的成分 （注：<strong>PySonar</strong>是作者在Google Intern时候所作）：</p>

<blockquote><p>“然而如果你知道 PySonar 的技术含量就会明白，这样的东西需要水平高过 Python 的创造者 Guido van Rossum 很多的人才能造出来。”</p></blockquote>

<p>同时自负自大的另一个表现就是嘲笑新人，或者对新人不热心。作者举了两个自己无法容忍的例子：一是问问题丢给一堆文档；二是当面演示用Google搜索答案。作者认为这相当无理。但我认为无何不妥之处。<a href="http://sachachua.com/blog/2014/02/tips-self-directed-learning-books-deliberate-practice/">Sacha Chua</a>在其关于学习的博客中有提到，当学习到达一定阶段，我们不会有教科书或者专门的老师来指导教学，能遇到个Mentor就是人生的大幸了。作者希望自己的每个问题都受到他人的重视，难免有些强人所难。况且有时候我们自身对问题的理解，和别人对问题的看法是有出入的。</p>

<p>还有有一句话说得好，就是“你怎么看自己，别人就怎么看你”。最简单的一个例子就是早起照镜子，发现自己头上有根呆毛，但由于赶时间匆忙出门，路上就总感觉别人投来异样的目光，午餐时邻桌传来的笑声也觉得是嘲笑，其实殊不知呆毛早就顺应地心引力垂了下来。这种心理现象比比皆是，往往也是不开心的源泉。</p>

<p>说计算机就算当机也无所谓。看看当今金融领域多少是利用计算机在完成交易，飞机的自动导航，汽车的防抱死系统、防侧翻系统，等等。软件可能无法直接伤人，但就如“吾虽不杀伯仁，伯仁因我而死”，不可避免要影响到人们的生活。</p>

<p>作者另一个论点就是窝里斗，但从其贬低软件工程师的思路来看，窝里斗的现象可见严重。主要论据是就算系统死机，也不会危及他人。这种说法有失偏颇。别且因此说计算机不是科学，也是完全没有依据的。目前学术界也一直在争论。从各大高校对于计算机学科所属院系就可以看出这种分歧。</p>

<blockquote><p><a href="http://en.wikipedia.org/wiki/Science">Science</a> (from Latin scientia, meaning &ldquo;knowledge&rdquo;) is a systematic enterprise that builds and organizes knowledge in the form of testable explanations and predictions about the universe.</p></blockquote>

<p>从以上科学的定义可以看出， 可重复的实验和可预期的结果是关键。比如绘画，对于一副画的好坏很难用一定标尺来衡量，再如文学，一千个人心中有一千个哈姆雷特。但计算机呢，总不能敲下去一个回车键，有一千种反应的可能吧；而且对于程序的好坏也有系统的衡量标准。现阶段的这种对于计算机到底属于哪类的争论，完全是由于计算机领域太年轻，60年的发展还不足以让大家统一到一起。单从现今技术的走向来看，在10多年前，谁也不会想到网络会有现在的力量。云计算，云存储，掀起了网络脚本语言的热潮。JavaScript竟然一跃成为Web开发的主流语言。再看微软刚起步的上世纪80年代，最主流的语言的C语言，它的胞弟C++才刚出生不久，而现在确实Java横扫的所有平台。</p>

<p>无法给计算机领域一个确切的定义，也正是由于其变化太快。在单机领域，技术、理论等都已稳定与成熟，但网络方面、人工智能等领域还有好多亟待解决的问题。这就造成了有部分已经成为科学，但另一部分却还是在工程领域。个人还是偏向于计算机是属科学的。</p>

<p>对于软件领域的盲目崇拜权威，我认为这在所有领域都存在，不光是IT业。在此就不复述了。</p>

<p><em>本文是就自己对作者文章中一些观点的看法，作为存档记录之用。</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[简书不简]]></title>
    <link href="http://abnerchou.me/cn/blog/2014/02/04/%E7%AE%80%E4%B9%A6%E4%B8%8D%E7%AE%80/"/>
    <updated>2014-02-04T12:24:00-05:00</updated>
    <id>http://abnerchou.me/cn/blog/2014/02/04/简书不简</id>
    <content type="html"><![CDATA[<p><img src="http://www.qinglv5.net/uploads/allimg/120801/1_120801131226_8.jpg" alt="" /></p>

<p>简书是什么？是<a href="http://www.tumblr.com">Tumblr</a>么？这是我听到简书这两个字时的第一反应。（事实也证明确有渊源）</p>

<p>怎么发现简书的呢？这要从最近的琐事说起了。前几日突然想起落满灰尘的RSS，打开Google Reader，竟被告知已关闭。而且连备份也没有，不由得郁闷。于是又在Mac上鼓捣了一下午的Feed Reader。功夫不负有心人，终于把以前订阅的所有RSS都找到了（总共也没几个）。</p>

<!-- more -->


<p>但是怎么发现简书的呢？通过RSS读到了关于一个叫<a href="http://news.dbanotes.net/">Startup News</a>的网站，和国外的<a href="https://news.ycombinator.com/">Hacker News</a>类似。于是激动得就订阅了。然后就看到简叔的关于微信的文章。进来后就被吸引得无法自拔。然后就注册了简书号。然后就觉得应该写点什么。然后……</p>

<p>简书给我的第一印象就是干净整洁，要不是其中的中文文章，我一定会以为她是个国外的网站。没有国内众多网站那种浮躁之气，恨不得把广告从屏幕里塞出来。看了简叔的一些文章，其中提到了苹果美学。这也难怪本站在Retina的Mac上是那么的完美无瑕，色调搭配，模块布局，都给人眼前一亮的感觉。</p>

<p>虽然不是个资深的博客，但也在国内各大博客站都有帐号，也算是个看客。最早是网易博客，其后是杭州一所小学办的博客（都不知道自己当初是怎么找到的），再其后是一个私人博客（办了一两年），再后来是新浪博客（这个用的时间最长），在后来是百度博客，以及众多只有帐号从不发文章的博客站。但是遇见简书后，我觉得这才是我多年一直在寻找的博客站。</p>

<p>简书之简深谙设计之美，在无数行业都适用，但都很难做到的一句话：“Keep it Simple, Stupid!” （<a href="http://en.wikipedia.org/wiki/KISS_principle">KISS</a>）这就让人很奇怪，不就是简单么，为什么就这么难？</p>

<p>大家可以想想，在iPhone出来之前，最想要的手机是什么？在Mac出来之前，人们是怎么看待多任务的？答案是iPhone和Mac都不是人们所想要的。iPhone和Mac之所以推出后大获欢迎，是因为抓住人们的真正需求，或者说是发现了人们的需求。</p>

<p>最常用的一个例子就是：福特汽车的创始人亨利福特说，在汽车发明以前如果你问消费者想要什么，他们会说想要跑得更快的马。用户其实不在乎是不是马，而是要跑得更快而已。虽然说这些信息都隐含在人们的欲望当中，但要发现它们却实属不易。</p>

<p>从国内第一个博客站开始，到现在仍然存活的博客站，每个首页都几乎是千篇一律：广告+闪来闪去的图片+密密麻麻的题目。在现在Push信息轻松获取的时代，这种Pull信息的模式必然让用户敬而远之。无数的模块，新加功能随着一次次补丁越添越多。广告也随着用户数的增加变得无孔不入。作为用户和网站管理员都不曾想过去简化博客。</p>

<p>眼看着Web 1.0的博客在遇到Web 2.0的SNS，<a href="https://twitter.com/">twiter</a>节节败退时，<a href="http://www.tumblr.com">Tumblr</a>横空出世。通过简单易用的多媒体分享功能，将博客也升级入了Web 2.0时代。</p>

<p>再看看国内的山寨Tumblr：<a href="http://qing.blog.sina.com.cn/">新浪博客Qing</a>，推他网（已关闭），<a href="http://www.diandian.com/">点点网</a>。俨然已经成为一个图片分享中心。图片确也赏心悦目，但图片最大的缺点就是无法搜索，锁定关键词以及查找相关内容。</p>

<p>简书专注于文字，而且支持Markdown书写模式（目前最简单快捷），让人只需思考如何写作，而不用理会博客模板设计等与写作无关的内容。这样的简化是否成功，目前不好下定论。但就个人而言，是非常看好此产品，也会将其介绍给身边的朋友。</p>

<p>如果以后能添加图片上传功能将更锦上添花。当然再有视频功能就更好了。 ^_^ 希望无视我的诉求，网站应该按照自己的理念来发展，有时用户的想法并非正确。就如<a href="https://www.facebook.com/">Facebook</a>在最初推出推送好友状态的功能时（这是现在SNS必要功能），收到上千封用户邮件声称自己感到受偷窥。Facebook甚至为此召开全体员工会议，最后决定是让用户适应一段。最后这一改动奠定了SNS的基础，更助Facebook成为全球第一社交网站。这就是Facebook “先做，再道歉”的产品理念。</p>

<p>简书并非一个简化了的博客平台，而是一个创新理念，打破传统，用户友好，蕴含文化的产品。</p>

<p>简书不简，简在其表，内涵其书！</p>

<p>PS：
1. 本文属胡言乱语之作；
2. 看到不少人都在相应每日千文，故此开篇也写千字。但要天天如此，恐难坚持。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一个配音演员]]></title>
    <link href="http://abnerchou.me/cn/blog/2013/08/21/%E4%B8%80%E4%B8%AA%E9%85%8D%E9%9F%B3%E6%BC%94%E5%91%98/"/>
    <updated>2013-08-21T20:15:00-04:00</updated>
    <id>http://abnerchou.me/cn/blog/2013/08/21/一个配音演员</id>
    <content type="html"><![CDATA[<p>Troy Baker
我最敬佩的配音演员，且不说他将《The Last of Us》中的Joel配活了，就这帅气的外表，就能让人怦然心动，更别提他的人格魅力了。</p>

<p>事情的起因是这样，在《TLOU》中有一幕戏，是Joel女儿因枪伤死去的场景。没有当过父亲的Troy专门为此提前做了不少准备，但这一幕就是不能达到导演的要求。于是一遍一遍反复的拍，最后导演觉得可以了。可是没过几天，导演又说这一幕不行，需要重拍。Troy当时信心十足，“你（导演）要最好的，我给你最好的”。可一个小时，两个小时，导演还是一遍遍否决掉。这时就连平时幽默风趣的Troy也难以压住心中的怒火，跟导演说：“我们已经拍到我们想要的了，现在在这纯粹是浪费时间。”导演只对他说了局：“放下自我。”Troy似乎感悟了。又拍了一遍便顺利通过了。
事后Troy说，当时自己愤怒是因为自己并不是希望拍好这场戏，而是希望别人肯定自己，说自己是个好演员。而导演跟他说了那句话之后，他才明白，正是因为自己的“面子”，阻碍了自己。当其忘掉自我，再次投入拍戏后，就完成了整部《TLOU》最感人的一幕。</p>

<p>其实在现实中，我们很多时候都是在维护自己的“面子”。比如一个项目，客户接受后，过了几天，又不满意又要修改。虽然知道这样反复修改并不会影响自己的利益（工资），但内心还是很反感。因为客户否定的是自己的作品，就是间接否定了自己的能力。抱着如此心态，是很难做出让人满意的。</p>

<p>事件访谈出自：<a href="http://www.bilibili.tv/video/av682122/">http://www.bilibili.tv/video/av682122/</a>
出演《TLOU》中Joel女儿Sarah的Hana Hayes：</p>

<p>一个配音演员
12岁……看着好成熟～</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[由一道围棋题想到的]]></title>
    <link href="http://abnerchou.me/cn/blog/2013/08/17/%E7%94%B1%E4%B8%80%E9%81%93%E5%9B%B4%E6%A3%8B%E9%A2%98%E6%83%B3%E5%88%B0%E7%9A%84/"/>
    <updated>2013-08-17T20:15:00-04:00</updated>
    <id>http://abnerchou.me/cn/blog/2013/08/17/由一道围棋题想到的</id>
    <content type="html"><![CDATA[<p>黑先，黑1和白2交换后黑棋如何整形？</p>

<p>答案：
由一道围棋题想到的
黑1枷很多人答对了，以下黑弃子包封，黑厚，且留有L6冲下的余味，黑好。
注意：9在12位打不好，白11长出成劫，此劫黑得拼命打，不好。</p>

<p>感悟：</p>

<p>不是很难的一道题，但需要有弃子的魄力。
初看答案，第一感黑棋这么走不是亏到爪哇国去了么？弃掉六子，而且让白棋就地做活。
但爪爪大神回复道：“黑棋外面广阔，大便宜啊，执黑的话要一看这个图就欣喜若狂才对。”欣喜若狂？突然对自己以前看待围棋的态度产生了疑问。如果不知道答案，实战中如果走成这样，我并不会欣喜若狂，我估计快痛苦流涕，等着投子认负了。但到底是什么蒙蔽了我的心灵，让我无法看清棋盘的本质呢？</p>

<p>我觉得是心态。
心态一词我们平时常说，但什么才是正确的心态却无定论。
米卢曾经带过一顶帽子，上面写着“态度决定一切”。这里的态度，就是心态的延伸。
还以上面道题做例，如果觉得那么走是黑损了，那么对整局棋就持消极态度，可能会认为自己空不够，走出无理手。</p>

<p>现实生活也是如此。
有时候因为身边一点失误或者失去的事或物，而心情沮丧，反而可能做出更加错误的事情。
这或许就是古语有云：“祸不单行，福不双至。”在灾祸来临时，用错误的心态去应对，反而祸上加祸。而喜悦的事情来临时，却又无法自制，从而很难双福临门。</p>

<p>我们无法预测未来。
近期发生的事情总会影响到心情。比如考试失利，失恋等。
但我们为何不把它们当成弃子而充分利用下呢？考试失利，找出其中错误的原因，下次考试不再犯同样的错误；失恋，总结自身不足，在下次弥补。正是因为如此，考试失利才应该高兴，至少通过考试学到了新东西；失恋也帮助筛选了一位不适合自己的人。</p>

<p>最忌讳的是回避。
有了良好的心态，在面对人生的不快时，也一定不能够回避。就好像输棋了就不愿意复盘一样，回避问题永远不是解决问题的方法。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Are you carrying fire on 《The Road》]]></title>
    <link href="http://abnerchou.me/cn/blog/2013/07/20/Are-you-carrying-fire-on-The-Road/"/>
    <updated>2013-07-20T20:15:00-04:00</updated>
    <id>http://abnerchou.me/cn/blog/2013/07/20/Are-you-carrying-fire-on-The-Road</id>
    <content type="html"><![CDATA[<p>在玩过《TLoU》后，突然对末日灾难人类的生存产生了好奇。在浏览《TLoU》的评论时，看到有人提到这部电影《The Road》（中文《末日危途》），于是就看了下。同样是一个大人一个小孩，同样是亲人（般）间的羁绊，同样是灾变之后，同样心存希望。</p>

<p>在此不说便知，以后内容含有丰富写实的剧透，如果没看过此片，还不想被剧透毁了话，请绕行。</p>

<p>《The Road》是根据同名小说改编，简述的是一对父子，在末日之后，旅途中的见闻和感受。和《TLoU》不同，本片的末日产生并不是僵尸或者疾病，而是自然灾害，具体是什么影片中好像没提（也可能没注意到）。具体情况就是天空越来越暗，植被不再生长，动物也大量死亡，人活着就只是寻找食物。</p>

<p>故事发生在末日爆发十年之后，中间穿插着主人公对妻子，以及末日爆发之前的生活回忆，用鲜明的对比展现了，末日后人性的残酷。</p>

<p>没有了现代文明，人如何存活呢？回归原始时代，像动物般狩猎？但经历过文明洗礼的人，又如何忍受这茹毛饮血的生活呢？片中可以看到不少自杀的人们，因为无法忍受这混乱的世界，而选择离开。主角的妻子甚至要带着儿子一起离开，被其制止，最后实在无法忍受之下，自己穿着单薄的衣服走进了寒冷的夜色之中。</p>

<p>人食人，这是在原始社会中食物短缺时经常发生的事情。甚至食物不缺，也会因为迷信或者其它方面的原因而吃人，在《水浒传》中就有山寨王抓平民挖心肝下酒的记录。虽然是小说，但这种情节还是比较可信的，就算是现代社会也不乏食人魔的产生。而且世界很多国家并没有将食人肉定罪，定罪者多是以谋杀罪或侮辱尸体罪等受到法律的制裁。所以在末日这样危机的前提下，人吃人也就很常见了。</p>

<p>主角在旅途中遇见了行行色色的食人魔。有将人当作猎物的猎人，还有将人当着牲口一样圈养起来的，也有自己同伴死后迫不及待烹而食之的饥者。但主角和其儿子哪怕是再饥饿，也从没动过一丝想食人肉的想法。只因为他们心中仍存着末日前的人性与正义。</p>

<p>儿子在父亲眼中就是天使，不希望让其受一丝一毫的污染。但是当其身体不行时，又希望儿子能够独当一面，不因自己的善心和人性而反遭杀害。但天使就是天使，他不会因为他人的善恶，而停止维护正义的行为。</p>

<p>影片结尾属于希望型 （因为在这种末世灾难中已经不存在什么Happy End了）。男孩的父亲死去后，正好遇到一个和他们一样存有人性的家庭，并将男孩纳入其中。让我难忘的是男孩在辨别这群陌生人是否可信时的一个问句：“Are you carrying fire?”这是其父亲对其常说的一句话，用来平息男孩心中疑惑。简单的句话，抽象却充满力量。让人在黑暗中看到光明。</p>

<p>有些时候，有些事情，我们是不需要有回报才做，我们坚持，是因为我们认为那样做是对的，因为那是希望。</p>

<p>简单将《The Road》和《The Last of Us》做个对比：</p>

<pre><code>               《The Road》                  《TLoU》
</code></pre>

<p>主角                大叔和儿子                  大叔和萝莉
末日原因            自然灾害                    虫草菌的僵尸感染
故事发生时间        末日爆发后十年              末日爆发后二十年
希望的源泉          儿子                        萝莉
小主角出生时间      末日后一年                  末日后六年
敌人                食人族、自然                猎人、食人族、军队、僵尸
主角末日前职业      医生                        建筑工人
主角经历            丧妻                        丧女
结局                男孩幸存                    萝莉获救</p>

<p>想到的就这些，总之是惊人的相似，如果喜欢《TLoU》的话，这部电影也一定不能错过。</p>
]]></content>
  </entry>
  
</feed>
