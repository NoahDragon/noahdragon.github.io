<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | Dream Navigator]]></title>
  <link href="http://abnerchou.me/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://abnerchou.me/"/>
  <updated>2015-05-13T23:05:38-04:00</updated>
  <id>http://abnerchou.me/</id>
  <author>
    <name><![CDATA[Abner Chou]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[一些关于搭建网页的信息]]></title>
    <link href="http://abnerchou.me/cn/blog/2015/05/12/some-info-about-build-a-website/"/>
    <updated>2015-05-12T22:52:00-04:00</updated>
    <id>http://abnerchou.me/cn/blog/2015/05/12/some-info-about-build-a-website</id>
    <content type="html"><![CDATA[<p>此文章写于2014-Aug-01.</p>

<p>这里只是罗列下搭建个人网站时的工具。</p>

<p>静态网站：<a href="https://github.com/">Github</a> 的page功能就足以搭建一个像样的静态页面了。这里有个不错的教程。
优点：免费，无限流量，几乎无当机的现象，轻松备份（使用git）
缺点：无法支持动态页面（比如留言功能），整站内容可以被他人轻松拷贝（git clone）</p>

<p>动态网站：与其购买支持PHP或ASP的空间，不如在<a href="https://www.digitalocean.com/">Digital Ocean</a>上买个VPS. 每月只需$5, 20Gb SSD硬盘，而且1TB的流量，对于个人网站来说是绰绰有余。
优点：支持各种网站模式，如同私有服务器；可选操作系统；有亚洲、欧洲、美国机房；SSD硬盘，系统安装备份速度快；专有IP
缺点：近一周当机两次；需付费；亚洲机房的速度，国内访问不理想；需要熟练使用Apache以及Linux操作系统</p>

<p>网站域名（Optional）：
这里有两个北美最大的域名销售网站：<a href="https://www.namecheap.com/">Namecheap</a>和<a href="https://www.godaddy.com">GoDaddy</a>。一般的域名都只需要$10每年，并且提供隐私保护，防止用户信息被Whois查询所泄露。支持DNS文件配置，比如邮件转发，二级域名等。</p>

<p><strong>网站内容管理：</strong></p>

<p><a href="http://jekyllrb.com/">Jekyll</a>是一个网站内容生成工具，使用Markdown格式。虽然功能强大，但要构建一个网站，还需要有CSS以及HTML的知识，并且熟悉Jekyll的架构。（在静态网站的教程中有提及）</p>

<p><a href="http://octopress.org/">Octopress</a>是一个基于Jekyll的静态网站生成器。相比于Jekyll，它提供现成的网站模板，并将Jekyll的搭建，生成，及发布自动，使得用户更专注于写作。缺点是它与Github集成，只能用于Github Page的搭建。(本网站即是基于Octopress)</p>

<p><a href="https://disqus.com/">Disqus</a>是网站评论系统。只需要添加一段Js代码到网页中，即可实现评论功能。适用静态网页，或拥有多个网站的管理员。此工具可以弥补Github Page无法评论的缺陷。</p>

<p><a href="https://sites.google.com">Google Site</a>是一个简洁明了的在线网站构建。</p>

<p><a href="https://zh-cn.wordpress.com/">Wordpress</a>是知名的网站内容管理系统。如果有自己的VPS，它的一键安装能省下不少时间精力。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My First Blog Here]]></title>
    <link href="http://abnerchou.me/blog/2014/03/11/my-first-blog-here/"/>
    <updated>2014-03-11T22:52:09-04:00</updated>
    <id>http://abnerchou.me/blog/2014/03/11/my-first-blog-here</id>
    <content type="html"><![CDATA[<p>Well, this is my first blog here (right now on github).</p>

<p>I&rsquo;m using the <a href="http://octopress.org">Octopress</a> as blog content management,
and I will briefly describe the way to set it up.</p>

<p>First, go to Octopress <a href="http://octopress.org/docs/setup/">setup page</a>.
Follow the instruction,
install the dependencies that Octopress will need.</p>

<p>Then choose the platform that the blog will be hosted on,
here is a link for <a href="http://octopress.org/docs/deploying/github/">deploying github pages</a>.
<strong>Note</strong>: an error occured while I followed the instruction to rake it.
<code>bash
rake aborted!
You have already activated rake 10.1.0, but your Gemfile requires rake 0.9.6.
Prepending `bundle exec` to your command may solve this.
/Users/Haochen/myBlog/octopress/Rakefile:2:in `&lt;top (required)&gt;'
(See full trace by running task with --trace)
</code>
This error could be easily solved by adding <code>bundle exec</code> in front of the <code>rake</code> command.</p>

<p>After <code>rake generate</code>, go to &lsquo;_deploy&rsquo; folder, and type <code>git pull origin master</code>.
Then type <code>rake deploy</code>.
Otherwise, there will be some errors:
<code>bash
error: failed to push some refs to 'git@gihub.com:your github page repo'
</code></p>

<p>Now, your blog page is on-line.
Although the pages are hosted on github,
you still need version control on your Octopress settings,
so don&rsquo;t forget to commit to the &lsquo;source&rsquo; branch.
<code>bash
git add .
git commit -m 'your message'
git push origin source
</code>
(I&rsquo;d rather put them into a bash file than typing every time)
<code>bash git_commit_source.sh
!/bin/bash
git add . &amp;&amp;
git commit -m "$1" &amp;&amp; #first argument will be the commit message
git push origin source
</code></p>

<p>To generate a blog page, you could use <code>rake new_post['blog name']</code>.
However, as I mentioned before the <code>rake</code> command wouldn&rsquo;t work properly if the ruby version didn&rsquo;t match.
We could use <code>bundle exec rake</code> to run the command.
Moreover, if you are using <strong>zsh shell</strong>, you should also add <code>noglob</code> in front of these command, because symbol &lsquo;[&rsquo; and &lsquo;]&rsquo; are reserved in zsh for regular expression.</p>

<p>Finally, my blog is here.
Much easier than I expected.
Using Octopress can save your time on setting a blog site, and it generates pages automatically.</p>

<p>This blog is still underconstruction. I would like to make it more simple and pretty.
K.I.S.S</p>

<p><strong>Update</strong> (several minutes later):
Encountered a problem of creating single page, e.g. 404.html.
The command <code>rake new-page['404']</code> cannot work on zsh due to &lsquo;[]&rsquo; is converted.
Hence, the only way to add cutomize page is to write a markdown file and put into &lsquo;source&rsquo; fold.
But, do not forget to add the following to the head of page:</p>

<pre><code class="bash">---
layout: page
title: "Super Awesome"
date: 2011-07-03 5:59
comments: true
sharing: true
footer: true
---
</code></pre>

<p><strong>Update</strong> (2014-Mar-12):
<code>rake preview</code> has problem with Safari.
Don&rsquo;t know why but only show blank page while open <a href="http://localhost:4000">http://localhost:4000</a> .
Using Chrome or Firefox will solve this.[<a href="https://github.com/imathis/octopress/issues/1395">ref</a>]</p>

<p>Due to save typing, I have written some bash files:
&#8220;` bash deploy.sh</p>

<h1>!/bin/bash</h1>

<p>bundle exec rake generate &amp;&amp;
bundle exec rake deploy</p>

<pre><code></code></pre>

<h1>!/bin/bash</h1>

<h1>set up the octopress preview</h1>

<h1>open <a href="http://localhost:4000">http://localhost:4000</a> in Chrome</h1>

<h1>Safari has some wired error in it</h1>

<h1>if previous preview is running, stop it</h1>

<p>preview_pid=<code>/bin/ps -fu $USER| grep "rake\ preview" | grep -v "grep" | awk '{print $2}'</code>
kill -2 $preview_pid</p>

<p>bundle exec rake generate &amp;&amp;
bundle exec rake preview &amp;</p>

<p>sleep 5 # wait a while to make sure the preview already running</p>

<h1>change the browser command if you are using a different OS and browser</h1>

<p>/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome &lsquo;<a href="http://localhost:4000">http://localhost:4000</a>&rsquo;</p>

<p>pidof &ldquo;Google Chrome&rdquo; | xargs wait
preview_pid=<code>/bin/ps -fu $USER| grep "rake\ preview" | grep -v "grep" | awk '{print $2}'</code>
kill -2 $preview_pid</p>

<h1>echo &ldquo;$preview_pid&rdquo;</h1>

<p>echo &ldquo;Preview DONE!&rdquo;</p>

<p>&#8220;`</p>

<p>Please ignore the text below, the latest code fixes all of them. :P</p>

<p><del><strong>Warnning</strong>:
This preview shell script may not work for you if you are a ruby developer,
or you are using some programs written or depended in/on ruby or ruby packages,
because it killed all ruby processes at the end.
Do not forget to fully quit Chrome (Comman+q in MacOS) before starting a new preview,
otherwise unknown error would occur (duplicate processes).</del></p>

<p><del>BTW, the preview.sh also left a messy terminal for you.
Well, everything have side effects.
But you could add <code>clear</code> command at the end of the script,
if you don&rsquo;t really care about the traces.</del></p>
]]></content>
  </entry>
  
</feed>
